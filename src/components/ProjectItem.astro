---
import ExternalLink from "../icons/ExternalLink.astro";
import Github from "../icons/Github.astro";

export interface Props {
  imageSrc: string;
  title: string;
  description: string;
  techStack: string[];
  githubLink: string;
  liveLink?: string;
}

const { imageSrc, title, description, techStack, githubLink, liveLink } =
  Astro.props;
---

<div class="project">
  <div class="project-image">
    <div class="image-overlay"></div>
    <img src={imageSrc} alt={title} />
  </div>
  <div class="project-content">
    <h3 class="primary-mono">Featured Project</h3>
    <a class="project-title" href={liveLink} target="_blank">{title}</a>
    <p class="project-description">{description}</p>
    <div class="tech-stack">
      {techStack.map((tech) => <span class="tech">{tech}</span>)}
    </div>
    <div class="project-links">
      <a href={githubLink} target="_blank">
        <Github />
      </a>
      <a href={liveLink} target="_blank">
        <ExternalLink />
      </a>
    </div>
  </div>
</div>

<style lang="scss">
  .project {
    height: 400px;

    @media screen and (max-width: 1024px) and (min-width: 481px) {
      width: calc(100vw - 128px);
      height: 400px;
    }

    @media screen and (max-width: 480px) {
      height: 575px;
      width: calc(100vw - 48px);
    }

    .project-image {
      .image-overlay {
        position: absolute;
        width: 100%;
        height: 400px;
        max-width: 580px;
        background-color: var(--primary-color);
        opacity: 0.4;
        z-index: 5;
        transition: opacity 0.2s ease-in-out;

        @media screen and (max-width: 1024px) and (min-width: 481px) {
          max-width: calc(100vw - 128px);
          background-color: var(--dark-primary-color);
          opacity: 0.95;
        }

        @media screen and (max-width: 480px) {
          height: 575px;
          max-width: calc(100vw - 48px);
          background-color: var(--dark-primary-color);
          opacity: 0.95;
        }

        &:hover {
          opacity: 0;

          & + img {
            filter: none;
          }
        }
      }

      img {
        width: 580px;
        height: 400px;
        object-fit: cover;
        filter: grayscale(1);

        @media screen and (max-width: 1024px) and (min-width: 481px) {
          width: 100%;
          height: 400px;
          max-width: calc(100vw - 128px);
          position: absolute;
        }

        @media screen and (max-width: 480px) {
          height: 575px;
          max-width: calc(100vw - 48px);
          position: absolute;
        }
      }
    }

    .project-content {
      width: 100%;
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      justify-content: center;
      position: relative;
      right: 50px;

      @media screen and (max-width: 1024px) {
        left: 0;
        align-items: flex-start;
        z-index: 5;
        padding: 64px 32px;
      }

      .project-title {
        color: var(--lightest-slate);
        margin-top: 8px;
        font-size: 24px;
        font-weight: 700;
        transition: all 0.3s ease-in-out;
        cursor: pointer;

        &:hover {
          color: var(--primary-color);
        }
      }

      .project-description {
        color: var(--slate);
        text-align: right;
        padding: 24px;
        width: 480px;
        background-color: var(--light-navy);
        position: relative;
        top: 32px;
        right: 0px;
        z-index: 5;
        box-shadow: 0 10px 30px -15px var(--navy-shadow);

        @media screen and (max-width: 1024px) {
          width: 100%;
          background-color: transparent;
          box-shadow: none;
          padding: 0;
          text-align: left;
        }
      }

      .tech-stack {
        margin-top: 60px;
        display: flex;
        column-gap: 24px;
        row-gap: 12px;
        flex-wrap: wrap;

        .tech {
          font-family: var(--mono);
          font-size: 14px;
        }
      }

      .project-links {
        width: 100px;
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        align-items: center;
        gap: 16px;
        margin-top: 32px;

        a {
          color: var(--lightest-slate);
          transition: all 0.3s ease-in-out;
          width: 24px;

          &:hover {
            color: var(--primary-color);
            transform: translateY(-8px);
          }
        }
      }
    }
  }
</style>
